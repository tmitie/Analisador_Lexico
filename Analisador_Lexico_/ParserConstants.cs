//====================================================================================================
//The Free Edition of Java to C# Converter limits conversion output to 100 lines per snippet.

//To subscribe to the Premium Edition, visit our website:
//https://www.tangiblesoftwaresolutions.com/order/order-java-to-csharp.html
//====================================================================================================

public interface ParserConstants
{
}

public static class ParserConstants_Fields
{
	public const int START_SYMBOL = 55;
	public const int FIRST_NON_TERMINAL = 55;
	public const int FIRST_SEMANTIC_ACTION = 83;
	public static readonly int[][] PARSER_TABLE = new int[][]
	{
		new int[] {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
		new int[] {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 1, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
		new int[] {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 22, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 23, 23, -1, -1, 23, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
		new int[] {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, 2, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
		new int[] {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 6, -1, -1, -1, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
		new int[] {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 26, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
		new int[] {-1, -1, -1, -1, -1, -1, 20, -1, 21, -1, -1, -1, -1, -1, -1, 18, -1, -1, -1, -1, -1, -1, -1, -1, -1, 19, -1, -1, 13, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
		new int[] {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 4, -1, -1, -1, -1, -1, 5, -1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
		new int[] {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
		new int[] {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, 12, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 12, -1, -1, -1},
		new int[] {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 10, -1, -1, -1, 9, -1, 10, -1, -1, -1},
		new int[] {-1, -1, -1, -1, -1, -1, 16, -1, 17, -1, -1, -1, -1, -1, -1, 14, -1, -1, -1, -1, -1, -1, -1, -1, -1, 15, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
		new int[] {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 25, -1, -1, -1, 25, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 24, -1, -1},
		new int[] {-1, 34, 30, 36, -1, -1, -1, 31, -1, 32, -1, -1, -1, -1, -1, -1, 29, -1, -1, 35, 36, -1, -1, -1, -1, -1, 33, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 36, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
		new int[] {-1, 27, 27, -1, -1, -1, -1, 27, -1, 27, -1, -1, -1, -1, -1, -1, 27, -1, -1, 27, 28, -1, -1, -1, -1, -1, 27, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 27, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
		new int[] {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 43, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 43, 43, 43, 43, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 43, -1, -1},
		new int[] {-1, -1, -1, 70, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 70, 69, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 70, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
		new int[] {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 71, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
		new int[] {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 72, -1, 73, -1, -1, -1},
		new int[] {-1, -1, -1, 38, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 38, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 38, -1, -1, -1, -1, -1, -1, -1, 37, -1, -1},
		new int[] {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 39, -1, -1, 40, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 40, 40, 40, 40, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 40, -1, -1},
		new int[] {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 41, -1, 42, -1, -1, -1},
		new int[] {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 44, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 44, 44, 44, 44, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 44, -1, -1},
		new int[] {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 64, 64, 64, 64, 64, 64, 61, -1, -1, -1, -1, 64, -1, -1, -1, -1, -1, -1, 64, -1, 64, -1, -1, 62},
		new int[] {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 54, 53, 51, 56, 55, 52, -1, -1, -1, -1, -1, 57, -1, -1, -1, -1, -1, -1, 57, -1, 57, -1, -1, -1},
		new int[] {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 46, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 49, 45, 47, 48, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 50, -1, -1},
		new int[] {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 68, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 67, 68, 68, 68, 68, 68, 68, 68, -1, -1, -1, -1, 68, -1, -1, -1, 66, -1, -1, 68, 65, 68, -1, -1, 68},
		new int[] {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 60, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 58, 60, 60, 60, 60, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 60, -1, 59}
	};
	public static readonly int[][] PRODUCTIONS = new int[][]
	{
		new int[] {11, 18, 44, 56, 48},
		new int[] {57, 58, 59, 60},
		new int[] {25, 18, 33, 61, 44, 62},
		new int[] {0},
		new int[] {18, 33, 61, 44, 62},
		new int[] {0},
		new int[] {24, 63, 45, 61, 44, 64},
		new int[] {0},
		new int[] {18, 65},
		new int[] {49, 18, 65},
		new int[] {0},
		new int[] {63, 45, 61, 44, 64},
		new int[] {0},
		new int[] {29, 43, 39, 47, 39, 42, 14, 66},
		new int[] {16},
		new int[] {26},
		new int[] {7},
		new int[] {9},
		new int[] {16},
		new int[] {26},
		new int[] {7},
		new int[] {9},
		new int[] {12, 18, 67, 59, 60, 44, 57},
		new int[] {0},
		new int[] {52, 63, 45, 61, 44, 64, 51},
		new int[] {0},
		new int[] {28, 68, 44, 69, 21},
		new int[] {68, 44, 69},
		new int[] {0},
		new int[] {17, 43, 70, 42, 6, 28, 68, 21, 71},
		new int[] {3, 43, 70, 42, 23, 28, 68, 21},
		new int[] {8, 68, 4, 43, 70, 42},
		new int[] {10, 52, 72, 51},
		new int[] {27, 18, 74},
		new int[] {2, 52, 75, 76, 51},
		new int[] {20, 43, 18, 33, 70, 42, 5, 43, 70, 42, 23, 28, 68, 21},
		new int[] {0},
		new int[] {52, 63, 51},
		new int[] {0},
		new int[] {15},
		new int[] {70},
		new int[] {49, 75, 76},
		new int[] {0},
		new int[] {77, 78, 79},
		new int[] {80, 81},
		new int[] {39},
		new int[] {18},
		new int[] {40},
		new int[] {41},
		new int[] {38},
		new int[] {52, 70, 51},
		new int[] {33, 82},
		new int[] {36, 82},
		new int[] {32, 82},
		new int[] {31, 82},
		new int[] {35, 82},
		new int[] {34, 82},
		new int[] {0},
		new int[] {37, 77, 78},
		new int[] {54, 77, 78},
		new int[] {77, 78},
		new int[] {37, 77, 78},
		new int[] {54, 77, 78},
	new int[] {77, 78},
	new int[] {37, 77, 78},
	new int[] {54, 77, 78},
	new int[] {13, 77, 78},
	new int[] {0},
	new int[] {50, 80, 81},
	new int[] {46, 80, 81},
	new int[] {30, 80, 81},
	new int[] {0},
	new int[] {22, 28, 68, 21},
	new int[] {0},
	new int[] {18, 73},
	new int[] {49, 18, 73},
	new int[] {0}
};

	public static string[] PARSER_ERROR = new string[] {"", "Era esperado fim de programa", "Era esperado \"write\"", "Era esperado \"while\"", "Era esperado \"until\"", "Era esperado \"to\"", "Era esperado \"then\"", "Era esperado \"string\"", "Era esperado \"repeat\"", "Era esperado \"real\"", "Era esperado \"read\"", "Era esperado \"program\"", "Era esperado \"procedure\"", "Era esperado \"or\"", "Era esperado \"of\"", "Era esperado \"literal\"", "Era esperado \"integer\"", "Era esperado \"if\"", "Era esperado \"identificador\"", "Era esperado \"ï¿½\"", "Era esperado \"for\"", "Era esperado \"end\"", "Era esperado \"else\"", "Era esperado \"do\"", "Era esperado \"declaravariaveis\"", "Era esperado \"const\"", "Era esperado \"char\"", "Era esperado \"chamaprocedure\"", "Era esperado \"begin\"", "Era esperado \"array\"", "Era esperado \"and\"", "Era esperado \">=\"", "Era esperado \">\"", "Era esperado \"=\"", "Era esperado \"<>\"", "Era esperado \"<=\"", "Era esperado \"<\"", "Era esperado \"+\"", "Era esperado \"numreal\"", "Era esperado \"numinteiro\"", "Era esperado \"nomestring\"", "Era esperado \"nomechar\"", "Era esperado \"]\"", "Era esperado \"[\"", "Era esperado \";\"", "Era esperado \":\"", "Era esperado \"/\"", "Era esperado \"..\"", "Era esperado \".\"", "Era esperado \",\"", "Era esperado \"*\"", "Era esperado \")\"", "Era esperado \"(\"", "Era esperado \"$\"", "Era esperado \"-\"", "<PROGRAMA> invï¿½lido", "<BLOCO> invï¿½lido", "<DCLPROC> invï¿½lido", "<DCLCONST> invï¿½lido", "<DCLVAR> invï¿½lido", "<CORPO> invï¿½lido", "<TIPO> invï¿½lido", "<LDCONST> invï¿½lido", "<LID> invï¿½lido", "<LDVAR> invï¿½lido", "<REPIDENT> invï¿½lido", "<TIPOARRAY> invï¿½lido", "<DEFPAR> invï¿½lido", "<COMANDO> invï¿½lido", "<REPCOMANDO> invï¿½lido", "<EXPRESSAO> invï¿½lido", "<ELSEPARTE> invï¿½lido", "<VARIAVEL> invï¿½lido", "<REPVARIAVEL> invï¿½lido", "<PARAMETROS> invï¿½lido", "<ITEMSAIDA> invï¿½lido", "<REPITEM> invï¿½lido", "<TERMO> invï¿½lido", "<REPEXP> invï¿½lido", "<REPEXPSIMP> invï¿½lido", "<FATOR> invï¿½lido", "<REPTERMO> invï¿½lido", "<EXPSIMP> invï¿½lido"};
}


//====================================================================================================
//End of the allowed output for the Free Edition of Java to C# Converter.

//To subscribe to the Premium Edition, visit our website:
//https://www.tangiblesoftwaresolutions.com/order/order-java-to-csharp.html
//====================================================================================================
