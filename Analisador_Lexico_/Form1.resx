<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        WgAAAABJRU5ErkJggg==
</value>
  </data>
</root>